# -*- coding: utf-8 -*-
"""TFM.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11L1W_g3m_VfQkEq7I3QeG1JdYF4Ttwfr

#Preparación del entorno
"""

#!pip install streamlit
#!pip install streamlit supabase
#!streamlit run fyt_formulario_streamlit.py

# Librerías necesarias
import streamlit as st
from supabase import create_client, Client
import requests
import datetime

# Configuración básica
SUPABASE_URL = "https://swsqgkccwviqfsixfmwi.supabase.co"
SUPABASE_API_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InN3c3Fna2Njd3ZpcWZzaXhmbXdpIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDcwNjY1NzAsImV4cCI6MjA2MjY0MjU3MH0.9PcRFd6Q_i-mh8VCmvd9150PWAAaRr5f-VOrdrg6soM"
HEADERS = {
    "apikey": SUPABASE_API_KEY,
    "Authorization": f"Bearer {SUPABASE_API_KEY}",
    "Content-Type": "application/json"}

# Función auxiliar para insertar datos en Supabase
def insert_into_supabase(table, data):
    url = f"{SUPABASE_URL}/rest/v1/{table}"
    response = requests.post(url, headers=HEADERS, json=data)
    return response.status_code, response.text

"""#Creación de formularios en Streamlit

## Formulario para que los centros deportivos registren su info y actividades
"""

# Registro de Centros Deportivos
st.header("Registro de Centro Deportivo")

with st.form("venue_form"):
    name = st.text_input("Nombre comercial")
    vat = st.text_input("VAT number")
    company = st.text_input("Nombre fiscal de la empresa")
    address = st.text_input("Dirección")
    postal = st.text_input("Código postal")
    city = st.text_input("Ciudad")
    lat = st.number_input("Latitud", format="%.6f")
    lon = st.number_input("Longitud", format="%.6f")
    website = st.text_input("Web")
    insta = st.text_input("Instagram")
    fb = st.text_input("Facebook")
    tw = st.text_input("Twitter")
    tt = st.text_input("TikTok")
    phone = st.text_input("Teléfono")
    email = st.text_input("Correo electrónico")
    venue_type = st.selectbox("Tipo de instalación", ["Club", "Tienda", "Otro"])
    accessible = st.checkbox("¿Tiene accesibilidad?")
    langs = st.text_input("Idiomas hablados")
    submitted = st.form_submit_button("Registrar centro")

    if submitted:
        venue_data = {
            "Name": name,
            "VAT number": vat,
            "Company Name": company,
            "Address": address,
            "postal_code": postal,
            "City": city,
            "Latitude": lat,
            "Longitude": lon,
            "Website": website,
            "Instagram": insta,
            "Facebook": fb,
            "Twitter": tw,
            "Tiktok": tt,
            "phone": phone,
            "email": email,
            "venue type": venue_type,
            "Accesibility": accessible,
            "Languages spoken": langs
        }
        code, result = insert_into_supabase("Venues", venue_data)
        st.success("Centro deportivo registrado exitosamente!" if code == 201 else f"Error: {result}")

"""##Formulario de alta de usuario"""

# Alta de Usuario
st.header("Registro de Usuario Deportista")

with st.form("user_form"):
    full_name = st.text_input("Nombre completo")
    email = st.text_input("Email")
    age = st.number_input("Edad", min_value=10, max_value=100)
    sex = st.selectbox("Sexo", ["Hombre", "Mujer", "Otro"])
    disability = st.checkbox("¿Tienes alguna discapacidad física?")
    frequency = st.selectbox("Frecuencia deportiva", ["Diaria", "Semanal", "Ocasional", "Otra"])
    goals = st.text_area("¿Qué buscas con la práctica deportiva?")
    preferences = st.multiselect("Preferencias deportivas", ["Fútbol", "Yoga", "Running", "Padel", "Tenis", "Otro"])
    address = st.text_input("Dirección de residencia")
    postal_code = st.text_input("Código postal")
    transport = st.selectbox("Transporte habitual", ["A pie", "Bici", "Transporte público", "Coche"])
    priority = st.multiselect("Prioridades al elegir práctica", ["Cercanía", "Accesibilidad", "Buen ambiente", "Evaluación monitores", "Exigencia", "Precio"])
    submit_user = st.form_submit_button("Registrar usuario")

    if submit_user:
        user_data = {
            "name": full_name,
            "email": email,
            "age": age,
            "sex": sex,
            "disability": disability,
            "frequency": frequency,
            "goals": goals,
            "preferences": preferences,
            "address": address,
            "postal_code": postal_code,
            "transport": transport,
            "priorities": priority
        }
        code, result = insert_into_supabase("Users", user_data)
        st.success("Usuario registrado exitosamente!" if code == 201 else f"Error: {result}")

"""##Formulario para búsquedas de actividades deportivas"""

st.header("Búsqueda de Actividades Deportivas")

with st.form("search_form"):
    sport = st.selectbox("Deporte", ["Fútbol", "Yoga", "Padel", "Running", "Otro"])
    day = st.selectbox("Día de la semana", ["Lunes", "Martes", "Miércoles", "Jueves", "Viernes", "Sábado", "Domingo"])
    time = st.time_input("Hora")
    price_range = st.slider("Rango de precio por clase (€)", 0, 100, (10, 30))
    location = st.text_input("Zona de interés (barrio, ciudad, etc.)")
    modality = st.selectbox("Modalidad", ["Presencial", "Virtual"])
    kind = st.selectbox("Tipo", ["Recreativo", "Federado", "Profesional"])
    category = st.text_input("Categoría o nivel")
    submit_search = st.form_submit_button("Buscar actividad")

    if submit_search:
        search_data = {
            "created_at": str(datetime.datetime.utcnow()),
            "sport": sport,
            "day": day,
            "time": str(time),
            "price_min": price_range[0],
            "price_max": price_range[1],
            "location": location,
            "modality": modality,
            "type": kind,
            "category": category
        }
        code, result = insert_into_supabase("Searches", search_data)
        st.success("Búsqueda registrada exitosamente!" if code == 201 else f"Error: {result}")

"""#Creación de modelos de análisis y predictivos"""
